// <auto-generated />
using MathQuestAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MathQuestAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MathQuestCore.Model.Lecon", b =>
                {
                    b.Property<int>("LeconId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeconId"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeconId");

                    b.ToTable("Lecons");

                    b.HasData(
                        new
                        {
                            LeconId = 1,
                            Contenu = "Test numero 1",
                            Titre = "Test1"
                        },
                        new
                        {
                            LeconId = 2,
                            Contenu = "Test numero 2",
                            Titre = "Test2"
                        });
                });

            modelBuilder.Entity("MathQuestCore.Model.LeconLu", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.Property<int>("LeconId")
                        .HasColumnType("int");

                    b.HasKey("UtilisateurId", "LeconId");

                    b.HasIndex("LeconId");

                    b.ToTable("LeconLu");
                });

            modelBuilder.Entity("MathQuestCore.Model.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilisateurId"));

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("UtilisateurId");

                    b.ToTable("Utilisateurs");

                    b.HasData(
                        new
                        {
                            UtilisateurId = 1,
                            Pseudo = "Dupont",
                            Score = 3
                        },
                        new
                        {
                            UtilisateurId = 2,
                            Pseudo = "Duti",
                            Score = 0
                        });
                });

            modelBuilder.Entity("MathQuestCore.Model.LeconLu", b =>
                {
                    b.HasOne("MathQuestCore.Model.Lecon", "Lecon")
                        .WithMany("LeconLus")
                        .HasForeignKey("LeconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathQuestCore.Model.Utilisateur", "Utilisateur")
                        .WithMany("LeconLus")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecon");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("MathQuestCore.Model.Lecon", b =>
                {
                    b.Navigation("LeconLus");
                });

            modelBuilder.Entity("MathQuestCore.Model.Utilisateur", b =>
                {
                    b.Navigation("LeconLus");
                });
#pragma warning restore 612, 618
        }
    }
}
